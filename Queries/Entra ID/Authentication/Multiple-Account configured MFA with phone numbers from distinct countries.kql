let _ExpectedCountryCodes = toscalar(
    _GetWatchlist("Activity-ExpectedSignificantActivity")
    | where Activity == "CorporateCountryCallingCode"
    | summarize make_list(Auxiliar)
);
AuthenticationMethodsChanges()
| where TargetResources has "PhoneNumber" or UpdateUser_TargetResources has "PhoneNumber"
| extend PhoneNumbers = extract_all(@'PhoneNumber\"\:\"([^\"]+)', tostring(column_ifexists("StrongAuthenticationUserDetails", dynamic(null))["newValue"]))
| mv-apply ModifiedProperties = TargetResources[0]["modifiedProperties"] on (
    summarize AuxiliarPhoneNumbers = make_set_if(
        trim(@'\"', tostring(ModifiedProperties["newValue"])),
        tostring(ModifiedProperties["displayName"]) endswith "PhoneNumber" and isnotempty(trim(@'\"', tostring(ModifiedProperties["newValue"]))))
        // Phone.Phone.PhoneNumber TemporaryAccessPass.Phone.PhoneNumber
    )
| extend PhoneNumbers = set_union(PhoneNumbers, AuxiliarPhoneNumbers)
| project-away AuxiliarPhoneNumbers
| where array_length(PhoneNumbers) > 1
| extend DistinctCountryCodes = set_union(extract_all(@'\"(\+\d+)\s+', tostring(PhoneNumbers)), dynamic(null))
| where array_length(DistinctCountryCodes) > 1
| where not(array_length(set_difference(DistinctCountryCodes, _ExpectedCountryCodes)) == 0)
| project
    TimeGenerated,
    Initiator,
    IPAddress,
    OperationName,
    Result,
    ResultDescription,
    TargetUserPrincipalName,
    TargetId,
    PhoneNumbers,
    DistinctCountryCodes,
    AdditionalDetails,
    InitiatorId,
    InitiatedBy,
    TargetResources,
    CorrelationId,
    UpdateUser_TargetResources,
    UpdateUser_CorrelationId
