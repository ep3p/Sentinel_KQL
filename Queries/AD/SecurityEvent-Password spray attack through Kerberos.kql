let query_frequency = 15m;
let query_period = 30m;
let query_wait = 15m;
let account_threshold = 5;
let _ExpectedIPAddresses = toscalar();
SecurityEvent
| where TimeGenerated between (ago(query_period + query_wait) .. ago(query_wait))
| where EventID in (4768, 4771)
| extend IpAddress = trim_start("::ffff:", IpAddress)
| where not(IpAddress in (_ExpectedIPAddresses))
| as _Events
| join kind=leftsemi (
    _Events
    | evaluate activity_counts_metrics(TargetSid, TimeGenerated, ago(query_period + query_wait), ago(query_wait), query_frequency, EventID, IpAddress)
    | summarize
        Results = make_bag(pack(iff(EventID == 4768, "Success", "Failure"), ["new_dcount"]))
        by TimeGenerated, IpAddress
    | summarize
        PreviousTimeGenerated = arg_min(TimeGenerated, PreviousResults = Results),
        CurrentTimeGenerated = arg_max(TimeGenerated, CurrentResults = Results)
        by IpAddress
    // Remove cases where distinct accounts with failures don't surpass the threshold
    | where CurrentResults["Failure"] > account_threshold
        or (not(PreviousResults["Failure"] > account_threshold) and (toint(PreviousResults["Failure"]) + toint(CurrentResults["Failure"])) > account_threshold)
    ) on IpAddress
| summarize
    StartTime = min(TimeGenerated),
    EndTime = max(TimeGenerated),
    FailureAccountCount = dcountif(TargetSid, not(EventID == 4768)),
    SuccessAccountCount = dcountif(TargetSid, EventID == 4768),
    FailureAccounts = array_sort_asc(make_set_if(TargetUserName, not(EventID == 4768), 250)),
    SuccessAccounts = array_sort_asc(make_set_if(TargetUserName, EventID == 4768)),
    Computers = array_sort_asc(make_set(Computer)),
    Activities = array_sort_asc(make_set(Activity)),
    Statuses = array_sort_asc(make_set_if(Status, not(EventID == 4768))),
    take_any(TargetDomainName)
    by IpAddress
// Remove IP addresses that don't have an authentication failure by wrong password
| where Statuses has "0x18"
| mv-expand SuccessAccount = iff(array_length(SuccessAccounts) > 0, SuccessAccounts, dynamic([""])) to typeof(string)
| project
    StartTime,
    EndTime,
    Computers,
    IpAddress,
    Activities,
    Statuses,
    TargetDomainName,
    FailureAccountCount,
    SuccessAccountCount,
    SuccessAccount,
    SuccessAccounts,
    FailureAccounts
